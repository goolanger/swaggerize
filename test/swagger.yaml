# Code generated by swaggerize; DO NOT EDIT.

basePath: /v2
definitions:
  ApiResponse:
    properties:
      code:
        format: int32
        type: integer
      message:
        type: string
      type:
        type: string
    type: object
  Category:
    properties:
      id:
        format: int64
        type: integer
      name:
        type: string
    type: object
  New:
    properties:
      id:
        format: int64
        type: integer
      name:
        type: string
    type: object
  Order:
    properties:
      complete:
        type: boolean
      id:
        format: int64
        type: integer
      petId:
        format: int64
        type: integer
      quantity:
        format: int32
        type: integer
      shipDate:
        format: date-time
        type: string
      status:
        enum:
        - placed
        - approved
        - delivered
        type: string
    type: object
  Pet:
    properties:
      category:
        $ref: '#/definitions/Category'
      id:
        format: int64
        type: integer
      name:
        example: doggie
        type: string
      photoUrls:
        items:
          type: string
        type: array
      status:
        enum:
        - available
        - pending
        - sold
        type: string
      tags:
        items:
          $ref: '#/definitions/New'
        type: array
    type: object
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
host: petstore.swagger.io
info:
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  contact:
    name: goolanger
    url: https://github.com/goolanger
    email: amauryuh@gmail.com
  description: 'This is a sample server Petstore server.  You can find out more about
    Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For
    this sample, you can use the api key `special-key` to test the authorization filters.'
  title: Swagger Petstore
  version: 1.0.5
  termsOfService: http://swagger.io/terms/
paths:
  /pet/{petId}:
    delete:
      operationId: deletePet
      parameters:
      - format: int64
        in: path
        name: petId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/Pet'
        "400":
          description: invalid id supplied
          schema:
            type: string
        "404":
          description: pet not found
          schema:
            type: string
      security: []
      tags:
      - pet
    get:
      operationId: getPetById
      parameters:
      - format: int64
        in: path
        name: petId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/Pet'
        "400":
          description: invalid id supplied
          schema:
            type: string
        "404":
          description: pet not found
          schema:
            type: string
      security:
      - bearer: []
      tags:
      - pet
    post:
      operationId: updatePetWithForm
      parameters:
      - in: formData
        name: name
        type: string
      - in: formData
        name: status
        type: string
      - format: int64
        in: path
        name: petId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/Pet'
        "400":
          description: invalid id supplied
          schema:
            type: string
        "404":
          description: pet not found
          schema:
            type: string
      security:
      - bearer: []
      tags:
      - pet
  /pet/{petId}/uploadImage:
    post:
      consumes:
      - multipart/form-data
      operationId: uploadFile
      parameters:
      - in: formData
        name: additionalMetadata
        type: string
      - format: byte
        in: formData
        name: file
        type: string
      - format: int64
        in: path
        name: petId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
      - bearer: []
      tags:
      - pet
schemes:
- https
- http
securityDefinitions:
  bearer:
    in: null
    name: bearer
    type: apiKey
swagger: "2.0"
tags:
- name: pet
  description: Everything about your Pets
- name: store
  description: Access to Petstore orders
- name: user
  description: Operations about user
